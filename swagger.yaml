swagger: '2.0'
info:
  version: 1.0.0
  title: RBKmoney Binbase API
  description: |
    ## Описание
    RBKmoney Binbase API является точкой взаимодействия с сервисом поиска информации о банковской карте по её номеру. Все запросы осуществляются с помощью вызовов соответствующих методов API. Любые сторонние приложения, включая наши веб-сайты, личные кабинеты и другие UI-интерфейсы являются внешними приложениями-клиентами.
    RBKmoney Binbase API работает поверх HTTP-протокола. Мы используем REST архитектуру, схема описывается в соответствии со [Swagger](http://swagger.io/). Коды возврата описываются соответствующими HTTP-статусами. Платформа принимает и возвращает JSON-структуры в HTTP body.
    ## Тип содержимого и кодировка
    Любой запрос к API должен выполняться в кодировке UTF-8 и с указанием содержимого в формате JSON
    ```
      Content-Type: application/json; charset=utf-8
    ```
    ## Максимальное время обработки запроса
    К любому вызову методов API можно добавить параметр отсечки по времени, определяющий максимальное время ожидания завершения операции по запросу. Данная отсечка передается в соответствующем заголовке HTTP-запроса:
    ```
     X-Request-Deadline: 10s
    ```
    Значение отсечки может быть задано в формате ISO 8601 (см. [Формат дат](#section/Format-dat)), либо в относительных величинах, например:
    `150000ms`, `540s`, `3.5m` При этом возможные единицы измерения `ms`, `s`, `m`. В обоих случаях  не рекомендуется, чтобы задаваемое значение было меньше **3 секунд** и превышало **1 минуту**.
  termsOfService: 'https://rbk.money/'
  contact:
    name: RBKmoney support team
    email: support@rbk.money
    url: 'https://api.rbk.money'
host: api.rbk.money
basePath: /binbase/v1
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      Для аутентификации вызовов мы используем [JWT](https://jwt.io). Cоответствующий ключ передается в заголовке.
      ```shell
       Authorization: Bearer {JWT}
      ```
      Запросы к данному API авторизуются токеном доступа к инвойсу `invoiceAccessToken`. Подробнее о токенах доступа к инвойсу можно прочитать в [соответсвующем разделе документации](https://developer.rbk.money/api/#section/Authorization).
security:
  - bearer: []
responses:
  Unauthorized:
    description: Ошибка авторизации
  DefaultLogicError:
    description: Неверные данные
    schema:
      $ref: '#/definitions/DefaultLogicError'
parameters:
  deadline:
    name: X-Request-Deadline
    in: header
    description: Максимальное время обработки запроса
    required: false
    type: string
    maxLength: 40
    minLength: 1
tags:
  - name: Search
    x-displayName: Поиск
    description: |
      Для получения информации о банке необходимо вызвать соответствующий метод платформы. Имеется возможность отфильтровать выборку по определенным статусам.
  - name: Error Codes
    x-displayName: Коды ошибок
    description: |

      ## Ошибки бизнес-логики
      Все ошибки бизнес-логики имеют следуюший вид:

        ```json
        {
          "code": "string",
          "message": "string"
        }
        ```

      В поле `code` содержится тип ошибки, а в `message` - дополнительная информация по произошедшей ошибке.
      На данный момент существуют следующие коды ошибок:

        | Код                              | Описание                                                                                                                              |
        | ---                              | --------
        | **invalidDeadline**              | Неверный формат времени.                                                                                                       |
        | **invalidRequest**               | Прочие неверные данные запроса.                                                                                                       |
        | **unsupportedPaymentSystem**     | Система не может работать с указанной платежной системой.
        | **unknownPaymentSystem**         | Системе неизвестна данная платежная система.

      ## Общие ошибки
      Ошибки возникающие при попытках совершения операций с незарегистрированными в системе объектами. Имеют вид

        ```json
        {
            "message": "string"
        }
        ```

      В поле `message` содержится информация по произошедшей ошибке. Например:

        ```json
        {
            "message": "Invalid token"
        }
        ```

      ## Ошибки обработки запросов
      В процессе обработки запросов силами нашей платформы могут происходить различные непредвиденные ситуации. Об их появлении платформа сигнализирует по протоколу HTTP соответствующими [статусами][5xx], обозначающими ошибки сервера.

        |  Код    |  Описание  |
        | ------- | ---------- |
        | **500** | В процессе обработки платформой запроса возникла непредвиденная ситуация. При получении подобного кода ответа мы рекомендуем обратиться в техническую поддержку. |
        | **503** | Платформа временно недоступна и не готова обслуживать данный запрос. Запрос гарантированно не выполнен, при получении подобного кода ответа попробуйте выполнить его позднее, когда доступность платформы будет восстановлена. |
        | **504** | Платформа превысила допустимое время обработки запроса, результат запроса не определён. Попробуйте отправить запрос повторно или выяснить результат выполнения исходного запроса, если повторное исполнение запроса нежелательно. |

      [5xx]: https://tools.ietf.org/html/rfc7231#section-6.6

      Если вы получили ошибку, которой нет в данном описании, обратитесь в техническую поддержку.
paths:
  /bin:
    post:
      description: Получить информацию о карте
      tags:
        - Search
      operationId: lookupCardInfo
      parameters:
        - $ref: '#/parameters/deadline'
        - name: cardNumber
          in: body
          description: Номер банковской карты
          required: true
          schema:
            $ref: '#/definitions/CardNumber'
      responses:
        '200':
          description: Найденая информация о карте
          schema:
            $ref: '#/definitions/CardInfo'
        '400':
          $ref: '#/responses/DefaultLogicError'
        '401':
          $ref: '#/responses/Unauthorized'
definitions:
  BankCardPaymentSystem:
    description: Платежная система
    type: string
    enum:
      - visa
      - mastercard
      - visaelectron
      - maestro
      - forbrugsforeningen
      - dankort
      - amex
      - dinersclub
      - discover
      - unionpay
      - jcb
      - nspkmir
  CardInfo:
    type: object
    description: Данные о банке
    required:
      - paymentSystem
    properties:
      paymentSystem:
        $ref: '#/definitions/BankCardPaymentSystem'
      bankName:
        description: Наименование юридического лица банковской организации
        type: string
        maxLength: 100
      countryCode:
        x-rebillyMerge:
          - $ref: '#/definitions/Residence'
          - description: |
              Страна резиденции банковской организации,
              alpha-3 код по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
        type: string
        pattern: '^[A-Z]{3}$'
        example: RUS
      cardType:
        $ref: '#/definitions/CardType'
  CardNumber:
    type: object
    required:
      - cardNumber
    properties:
      cardNumber:
        description: Номер банковской карты
        type: string
        pattern: '^\d{12,19}$'
  CardType:
    description: Тип банковской карты
    type: string
    enum:
      - ChargeСard
      - CreditCard
      - DebitCard
      - CreditOrDebitCard
  DefaultLogicError:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: |
          [Код ошибки](#tag/Error-Codes)
        type: string
        enum:
          - invalidRequest
          - invalidDeadline
          - unknownPaymentSystem
          - unsupportedPaymentSystem
      message:
        description: Человекочитаемое описание ошибки
        type: string
  Residence:
    description: 'Резиденция, alpha-3 код по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)'
    type: string
    pattern: '^[A-Z]{3}$'
    example: RUS
